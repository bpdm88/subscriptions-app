{"version":3,"sources":["components/List/TrafficLight/TrafficLight.js","data/utilities/time.js","data/utilities/finances.js","components/Button/Button.js","axios-config.js","components/Button/index.js","data/actions/api.js","data/actions/state.js","components/Categories/Categories.js","components/Subscription/Subscription.js","components/Subscription/index.js","components/Form/FormField.js","components/Form/Form.js","components/Form/index.js","components/List/List.js","components/List/index.js","assets/icons/logo.svg","components/Header.js","components/DropDown/DropDown.js","components/DropDown/index.js","components/Filter/Filter.js","components/Filter/index.js","App.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["TrafficLight","colourCode","className","1","2","3","convertToDays","miliseconds","daysFloat","Math","floor","paymentDayToDateObj","int","current","Date","getDate","setDate","setMonth","getMonth","paymentDateToString","paymentDate","console","log","date","month","dateAppend","cancelDate","noticePeriod","noticeMili","now","cancelDateObj","overShootMonths","ceil","daysToCancel","paymentDay","cancelOn","amountPaid","start","cost","startDateObj","endDateObj","startDate","dateInt","dateString","toString","year","substring","day","dateStringToDateObj","getFullYear","Button","props","handleDelete","bind","event","preventDefault","window","confirm","this","deleteItem","itemID","onClick","Component","axios","create","baseURL","headers","Accept","connect","dispatch","id","delete","then","type","deleteSubscription","apiDelete","Categories","selected","categories","map","element","index","Subscription","listID","payment_date","notice_period","state","subscriptions","filter","item","length","FormField","label","name","handleChange","value","min","max","htmlFor","onChange","Form","notice","handleSubmit","handleChangeName","handleChangeCost","handleChangeStart","handleChangePayment","handleChangeNotice","handleChangeCategories","handleAddSubscription","setState","currentTarget","form","onSubmit","React","data","post","subscription_name","replace","split","storeSubscription","postSubscription","List","catListInFilterList","catList","filterList","reduce","bool","category","includes","handleClick","whatColour","formClick","handleLoad","setSelected","dataset","displayForm","rounded","toFixed","list","categoryFilter","filteredList","subscr","data-id","get","Header","src","logoIcon","alt","href","target","rel","DropDown","handleDropDown","categoryClick","innerText","dropDownClick","dropDownContent","selectedCategories","class","array","unique","push","dropDown","Filter","handleClickPayment","handleClickCancel","filterPaymentClicked","filterCancelClicked","filterClick","filterContent","App","initial","loaded","reducer","action","saveSubscriptions","toggleForm","saveSubscription","updated","deleteFromState","addCatFilter","clrCatFilter","toggleDropDown","toggleFilter","sorted","sort","a","b","sortedCopy","filterByPayment","filterByCancel","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","initialState","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f09e93f.chunk.js","sourcesContent":["const TrafficLight = ({ colourCode }) => {\n    let classNames = {\n        1: \"traffic-light--green\",\n        2: \"traffic-light--yellow\",\n        3: \"traffic-light--red\",\n    };\n\n    return <div className={classNames[colourCode]}></div>;\n};\n\nexport default TrafficLight;\n","export const convertToDays = (miliseconds) => {\n    let daysFloat = miliseconds / (1000*60*60*24);\n    let daysInt = Math.floor(daysFloat);\n    return daysInt;\n}\n\nexport const dateStringToDateObj = (dateInt) => {\n    let dateString = dateInt.toString();\n    let year = +dateString.substring(0, 4);\n    let month = +dateString.substring(4, 6);\n    let day = +dateString.substring(6, 8);\n    let dateObj = new Date(year, month -1 , day)\n    return dateObj;\n}\n\nexport const paymentDayToDateObj= (int) => {\n    let current = new Date();\n    let today = current.getDate();\n\n    if ( int > today ) {\n        current.setDate(int)\n        return current;\n    } else {\n        current.setDate(int)\n        current.setMonth(current.getMonth() + 1);\n        return current;\n    }\n}\n\nconst dateAppend = (int) => {\n    switch (int){\n        case 1:\n            return \"st\";\n        case 2:\n            return \"nd\";\n        case 3:\n            return \"rd\";\n        case 21:\n            return \"st\";\n        case 22:\n            return \"nd\";\n        case 23:\n            return \"rd\";\n        case 31:\n            return \"st\";\n        default:\n            return \"th\";\n    }\n}\n\nexport const paymentDateToString = (int) => {\n    let monthsArray = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n    let paymentDate = paymentDayToDateObj(int);\n    console.log(paymentDate);\n    let date = paymentDate.getDate();\n    let month = monthsArray[paymentDate.getMonth()];\n    \n\n    return `${date}${dateAppend(date)} ${month}`;\n    \n}\n\nexport const cancelDate = ( noticePeriod, paymentDate ) => {\n    let noticeMili = noticePeriod*1000*60*60*24;\n    let now = new Date();\n\n    let cancelDateObj = new Date(paymentDate - noticeMili);\n\n    if ( cancelDateObj - now >= 0 ){\n        return cancelDateObj;\n    } else {\n\n        let overShootMonths = Math.ceil(( convertToDays(now - cancelDateObj) / 365 ) * 12);\n\n        cancelDateObj.setMonth(cancelDateObj.getMonth() + overShootMonths);\n        return cancelDateObj;\n    }\n}\n\nexport const daysToCancel = (noticePeriod, paymentDate) => {\n\n    let paymentDay = paymentDayToDateObj(paymentDate);\n\n    let cancelOn = cancelDate(noticePeriod, paymentDay);\n\n    let current = new Date();\n\n    let days = convertToDays(cancelOn - current);\n    \n    return days;\n\n}\n\nexport const monthDiff = ( startDateObj, endDateObj ) => {\n    \n    let yearsAsMonths = (endDateObj.getFullYear() - startDateObj.getFullYear()) * 12;\n\n    let monthsInCurrentYear = endDateObj.getMonth() - startDateObj.getMonth();\n\n    let elapsed = yearsAsMonths + monthsInCurrentYear;\n\n\n    return elapsed;\n\n}","import { dateStringToDateObj, monthDiff } from \"./time\";\n\nexport const amountPaid = ( start, cost ) => {\n    \n    let startDate = dateStringToDateObj(start);\n\n    let current = new Date();\n\n    let elapsed = monthDiff(startDate, current);\n\n    return elapsed*cost;\n}","import { Component } from \"react\";\nclass Button extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete(event) {\n        event.preventDefault();\n        if(window.confirm(\"Do you want to delete this subscription?\")){\n            this.props.deleteItem(this.props.itemID);\n        };\n    }\n\n    render() {\n        return(\n            <button onClick={ this.handleDelete } className=\"delete\">Delete Subscription</button>\n        );\n    }\n}\n\nexport default Button;","// import the library version of axios\nimport axios from \"axios\";\n\n// create a version of axios with useful defaults\nexport default axios.create({\n    baseURL: \"https://subscriptions-tracker.developme.space/api/subscriptions\",\n    headers: {\n        // make sure we get JSON back\n        Accept: \"application/json\",\n    },\n});\n","import Button from \"./Button\";\n\nimport { connect } from \"react-redux\";\nimport { apiDelete } from \"../../data/actions/api\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteItem: ( id ) => dispatch(apiDelete( id )),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Button);","import axios from \"../../axios-config\";\n\nimport {\n    storeSubscriptions,\n    storeSubscription,\n    deleteSubscription,\n} from \"./state\";\n\nexport const getSubscriptions = () => {\n    return (dispatch) => {\n        axios.get(\"/\").then(({ data }) => {\n            let subscriptions = data.data;\n            dispatch(storeSubscriptions(subscriptions));\n        });\n    };\n};\n\nexport const postSubscription = (data) => {\n    return (dispatch) => {\n        axios\n            .post(\"/\", {\n                subscription_name: data.name,\n                cost: data.cost,\n                start: data.startDate.replace(/-/g, \"\"),\n                payment_date: data.paymentDate,\n                notice_period: data.notice,\n                categories: typeof data.categories === \"string\" ? data.categories.split(\", \") : [],\n            })\n            .then(({ data }) => {\n                dispatch(storeSubscription(data.data));\n            });\n    };\n};\n\nexport const apiDelete = (id) => {\n    return (dispatch) => {\n        axios.delete(`/${id}`).then(() => {\n            dispatch(deleteSubscription(id));\n        });\n    };\n};\n","export const reset = () => ({\n    type: \"RESET\",\n});\n\nexport const storeSubscriptions = (data) => ({\n    type: \"STORE_SUBSCRIPTIONS\",\n    data: data,\n});\n\nexport const selected = (id) => ({\n    type: \"SET_SELECTED\",\n    selected: id,\n});\n\nexport const storeSubscription = (data) => ({\n    type: \"SAVE_SUBSCRIPTION\",\n    data: data,\n});\n\nexport const deleteSubscription = (id) => ({\n    type: \"DELETE\",\n    id: id,\n});\n\nexport const setForm = () => ({\n    type: \"SET_FORM\",\n});\n\nexport const categoryFilter = (category) => {\n    if (category === \"Clear\") {\n        return {\n            type: \"CLEAR_CAT_FILTER\",\n        };\n    } else {\n        return {\n            type: \"ADD_CAT_FILTER\",\n            category: category,\n        };\n    }\n};\n\nexport const filterByPayment = () => {\n    return {\n        type: \"FILTER_BY_PAYMENT\",\n    }\n};\n\nexport const filterByCancel = () => {\n    return {\n        type: \"FILTER_BY_CANCEL\",\n    }\n};\n\nexport const dropDownState = () => {\n    return {\n        type: \"TOGGLE_DROP_DOWN\",\n    }\n}\n\nexport const selectFilter = () => {\n    return {\n        type: \"TOGGLE_FILTER\",\n    }\n}\n","const Categories = ({ selected }) => {\n    return (\n            <ul className=\"categories-list\"> \n                { selected.categories.map((element, index) => (            \n                    <li className=\"category\" key={ index }>{ element }</li> \n                )) } \n            </ul>\n        );\n};\n\nexport default Categories;","import { daysToCancel, paymentDateToString } from \"../../data/utilities/time\";\nimport { amountPaid } from \"../../data/utilities/finances\";\nimport Button from \"../Button\";\nimport Categories from \"../Categories/Categories\";\n\nconst Subscription = ({ selected, listID }) => {\n    let display = selected && selected.id === listID;\n    return (\n        !display ? null :\n        <div className=\"card-items\">\n            <p>Monthly Cost: £{selected.cost}</p>\n            <p>Next payment date: {paymentDateToString(selected.payment_date)}</p>\n            <p>Spent so far: £{amountPaid(selected.start, +selected.cost)}</p>\n            <p>Cancel in: { daysToCancel(selected.notice_period, selected.payment_date) } days</p>\n            <Categories selected={ selected }/>\n            <Button className=\"delete\" itemID={ listID }></Button>\n        </div>\n    );\n};\n\nexport default Subscription;\n","import Subscription from \"./Subscription\";\n\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    let current = state.subscriptions.filter( item => item.id === state.selected );\n\n    return {\n        selected: current.length === 0 ? null : current[0],\n    };\n};\n\nexport default connect(mapStateToProps)(Subscription);","const FormField = ({ label, name, type, handleChange, value, min, max }) => {\n    return (\n        <div>\n            <label htmlFor={name}>{label}</label>\n            <input\n                className=\"input\"\n                id={name}\n                type={type}\n                onChange={handleChange}\n                value={value}\n                min={min}\n                max={max}\n            />\n        </div>\n    );\n};\n\nexport default FormField;\n","import React from \"react\";\nimport FormField from \"./FormField\";\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\",\n            cost: 0,\n            startDate: null,\n            paymentDate: 0,\n            notice: 0,\n            categories: [],\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChangeCost = this.handleChangeCost.bind(this);\n        this.handleChangeStart = this.handleChangeStart.bind(this);\n        this.handleChangePayment = this.handleChangePayment.bind(this);\n        this.handleChangeNotice = this.handleChangeNotice.bind(this);\n        this.handleChangeCategories = this.handleChangeCategories.bind(this);\n    }\n\n    handleSubmit(event) {\n        let {\n            name,\n            cost,\n            startDate,\n            paymentDate,\n            notice,\n            categories,\n        } = this.state;\n\n        event.preventDefault();\n\n        this.props.handleAddSubscription({ ...this.state });\n\n        this.setState({\n            name: \"\",\n            cost: null,\n            startDate: \"\",\n            paymentDate: null,\n            notice: null,\n            categories: [],\n        });\n    }\n\n    handleChangeName(event) {\n        this.setState({ name: event.currentTarget.value });\n    }\n\n    handleChangeCost(event) {\n        this.setState({ cost: event.currentTarget.value });\n    }\n\n    handleChangeStart(event) {\n        this.setState({ startDate: event.currentTarget.value });\n    }\n\n    handleChangePayment(event) {\n        let date;\n\n        if (event.currentTarget.value > 31) {\n            date = 31;\n        } else if (event.currentTarget.value < 1) {\n            date = 1;\n        } else {\n            date = event.currentTarget.value;\n        }\n\n        this.setState({ paymentDate: date });\n    }\n\n    handleChangeNotice(event) {\n        this.setState({ notice: event.currentTarget.value });\n    }\n\n    handleChangeCategories(event) {\n        this.setState({ categories: event.currentTarget.value });\n    }\n\n    render() {\n        let {\n            name,\n            cost,\n            startDate,\n            paymentDate,\n            notice,\n            categories,\n        } = this.state;\n\n        let { form } = this.props;\n\n        return !form ? null : (\n            <form onSubmit={this.handleSubmit}>\n                <FormField\n                    label=\"Name\"\n                    name=\"Name\"\n                    type=\"text\"\n                    handleChange={this.handleChangeName}\n                    value={name}\n                />\n                <FormField\n                    label=\"Cost\"\n                    name=\"Cost\"\n                    type=\"number\"\n                    handleChange={this.handleChangeCost}\n                    value={cost}\n                />\n                <FormField\n                    label=\"Start Date\"\n                    name=\"Start Date\"\n                    type=\"date\"\n                    handleChange={this.handleChangeStart}\n                    value={startDate}\n                />\n                <FormField\n                    label=\"Payment Date\"\n                    name=\"Payment Date\"\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"31\"\n                    handleChange={this.handleChangePayment}\n                    value={paymentDate}\n                />\n                <FormField\n                    label=\"Notice Period\"\n                    name=\"Notice Period\"\n                    type=\"number\"\n                    handleChange={this.handleChangeNotice}\n                    value={notice}\n                />\n                <FormField\n                    label=\"Categories\"\n                    name=\"Categories\"\n                    type=\"text\"\n                    handleChange={this.handleChangeCategories}\n                    value={categories}\n                />\n                <button className=\"form-button\">Add Subscription</button>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import { connect } from \"react-redux\";\nimport Form from \"./Form\";\nimport { postSubscription } from \"../../data/actions/api\";\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        handleAddSubscription: (data) => dispatch(postSubscription(data)),\n    };\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        form: state.form,\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { Component } from \"react\";\nimport TrafficLight from \"./TrafficLight/TrafficLight\";\nimport Subscription from \"../Subscription\";\nimport { paymentDayToDateObj } from \"../../data/utilities/time\";\nimport Form from \"../Form\";\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.whatColour = this.whatColour.bind(this);\n        this.formClick = this.formClick.bind(this);\n        this.catListInFilterList = this.catListInFilterList.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.handleLoad();\n    }\n\n    handleClick(event) {\n        this.props.setSelected(event.currentTarget.dataset.id);\n    }\n\n    formClick() {\n        this.props.displayForm();\n    }\n\n    whatColour(paymentDay) {\n        let paymentDate = paymentDayToDateObj(paymentDay);\n\n        let current = new Date(); // the current date\n\n        let difference = paymentDate - current; // milliseconds difference\n\n        let days = difference / (1000 * 60 * 60 * 24); // turns milliseconds to days\n\n        let rounded = days.toFixed(1); // rounded day\n\n        if (rounded <= 5) {\n            return 3;\n        } else if (rounded <= 10) {\n            return 2;\n        } else return 1;\n    }\n\n    catListInFilterList = (catList, filterList) => {\n        let bool = catList.reduce((bool, category) => {\n            if (filterList.includes(category)) {\n                return true;\n            } else {\n                return bool;\n            }\n        }, false);\n        return bool;\n    };\n\n    render() {\n        const { list, categoryFilter, form } = this.props;\n        let filteredList = [];\n\n        if (categoryFilter.length === 0) {\n            filteredList = list;\n        } else {\n            filteredList = list.filter((subscr) =>\n                this.catListInFilterList(subscr.categories, categoryFilter)\n            );\n        }\n\n        return (\n            <ul className=\"sub-card\">\n                {filteredList.map((item) => (\n                    <li\n                        key={item.id}\n                        // onClick={this.handleClick}\n                        data-id={item.id}\n                        className=\"list-item\"\n                    >\n                        <div\n                            onClick={this.handleClick}\n                            data-id={item.id}\n                            className=\"list-item_header\"\n                        >\n                            <p>{item.subscription_name}</p>\n\n                            <TrafficLight\n                                colourCode={this.whatColour(item.payment_date)}\n                            />\n                        </div>\n                        <Subscription listID={item.id} />\n                    </li>\n                ))}\n                <li className=\"list-item\">\n\n                    <p className=\"add-sub-text\" onClick={this.formClick}>Add Subscription</p>\n\n                    <Form />\n                </li>\n            </ul>\n        );\n    }\n}\n\nexport default List;\n","import List from \"./List\";\n\nimport { connect } from \"react-redux\";\nimport { selected, setForm } from \"../../data/actions/state\";\nimport { getSubscriptions } from \"../../data/actions/api\";\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        list: state.subscriptions,\n        categoryFilter: state.categoryFilter,\n        form: state.form,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelected: (id) => dispatch(selected(id)),\n        handleLoad: () => dispatch(getSubscriptions()),\n        displayForm: () => dispatch(setForm()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","export default __webpack_public_path__ + \"static/media/logo.5bbf18a7.svg\";","import logoIcon from '../assets/icons/logo.svg';\n\nconst Header = () => (\n    <header>\n        <div>\n        <img className=\"logo-svg\" src={ logoIcon } alt=\"My Subscriptions Logo\"/>\n        </div>\n        <ul>\n            <li><a href=\"https://github.com/ammersive/subscription-tracker-bk/blob/main/README.md\" target=\"_blank\" rel=\"noreferrer\">About</a></li>\n        </ul>\n    </header>\n);\n\nexport default Header;\n","import { Component } from \"react\";\n\nclass DropDown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleDropDown = this.handleDropDown.bind(this);\n    }\n\n    handleClick(event) {\n        event.preventDefault();\n        \n        this.props.categoryClick(event.currentTarget.innerText);\n    }\n\n    handleDropDown(event) {\n        event.preventDefault();\n        \n        this.props.dropDownClick();\n    }\n\n    render() {\n        let { categories, dropDownContent, selectedCategories } = this.props;\n        return(\n            <div class=\"dropdown\">\n                <button class=\"dropbtn\" onClick={ this.handleDropDown }>Catagories</button>\n                { !dropDownContent ? null :\n                    <div class=\"dropdown-content\">\n                        <button onClick={ this.handleClick }>Clear</button>\n                        { categories ? this.props.categories.map(category => (\n                            <button id={selectedCategories.includes( category ) ? \"selectedCat\" : \"\" } key={ category } onClick={ this.handleClick }>{ category }</button>\n                        )) : \"Loading....\"}\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n\nexport default DropDown;\n","import DropDown from \"./DropDown\";\n\nimport { connect } from \"react-redux\";\nimport { categoryFilter, dropDownState } from \"../../data/actions/state\";\n\nconst mapStateToProps = (state) => {\n    //get all subscriptions\n    const { subscriptions } = state;\n    //reduce down all the categories accross subscriptions into a list without dubplicates\n    let categories = subscriptions.reduce(( array, item ) => {\n        let categoriesList = item.categories;\n        let unique = categoriesList.filter( item => !array.includes(item));\n        array.push(...unique);\n        return array;\n    },[]);\n\n    return {\n        categories: categories,\n        dropDownContent: state.dropDown,\n        selectedCategories: state.categoryFilter,\n    };\n};\n\nconst mapDispatchToProps = ( dispatch ) => {\n    return {\n        categoryClick: (category) => dispatch(categoryFilter(category)),\n        dropDownClick: (category) => dispatch(dropDownState()),\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(DropDown);","import { Component } from \"react\";\n\nclass Filter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleDropDown = this.handleDropDown.bind(this);\n        this.handleClickPayment = this.handleClickPayment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n    }\n\n    handleClickPayment(event) {\n        event.preventDefault();\n        \n        this.props.filterPaymentClicked();\n    }\n\n    handleClickCancel(event) {\n        event.preventDefault();\n        \n        this.props.filterCancelClicked();\n    }\n\n    handleDropDown(event) {\n        event.preventDefault();\n        \n        this.props.filterClick();\n    }\n\n    render() {\n        let { filterContent, dropDown } = this.props;\n        return(\n            dropDown ? null :\n            <div class=\"dropdown\">\n                <button class=\"dropbtn\" onClick={ this.handleDropDown }>Sort</button>\n                { !filterContent ? null :\n                    <div className=\"dropdown-content sort-background\">\n                        <button className=\"adjustment\" onClick={ this.handleClickPayment }>Payment day</button>\n                        <button className=\"adjustment\" onClick={ this.handleClickCancel }>Cancel day</button>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n\nexport default Filter;","import Filter from \"./Filter\";\n\nimport { connect } from \"react-redux\";\nimport { selectFilter, filterByPayment, filterByCancel } from \"../../data/actions/state\";\n\nconst mapStateToProps = (state) => {\n    return {\n        filterContent: state.filterContent,\n        dropDown: state.dropDown,\n    };\n};\n\nconst mapDispatchToProps = ( dispatch ) => {\n    return {\n        filterPaymentClicked: () => dispatch(filterByPayment()),\n        filterCancelClicked: () => dispatch(filterByCancel()),\n        filterClick: () => dispatch(selectFilter()),\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(Filter);\n\n","import \"./styles/index.css\";\nimport List from \"./components/List\";\nimport Header from \"./components/Header\";\nimport DropDown from \"./components/DropDown\";\nimport Filter from \"./components/Filter\";\n\nconst App = () => (\n    <>\n        <Header />\n        <DropDown />\n        <Filter />\n        <List />\n    </>\n);\n\nexport default App;\n","const initial = {\n    subscriptions: [],\n    loaded: false,\n    selected: null,\n    form: false,\n    categoryFilter: [],\n    dropDown: false,\n    filterContent: false,\n};\n\nexport default initial;\n","import { deleteSubscription } from \"./actions/state\";\nimport initialState from \"./initial\";\nimport { paymentDayToDateObj, cancelDate } from \"./utilities/time\";\n\n// Reducer functions\nconst saveSubscriptions = (state, { data }) => {\n    return {\n        ...state,\n        subscriptions: data,\n    };\n};\n\nconst setSelected = (state, { selected }) => {\n    return {\n        ...state,\n        // selected: +selected,        \n        selected: +selected === state.selected ? 0 : +selected,\n    };\n};\n\nconst saveSubscription = (state, { data }) => {\n    return {\n        ...state,\n        subscriptions: [...state.subscriptions, data],\n    };\n};\n\nconst deleteFromState = (state, { id }) => {\n    let subscriptions = state.subscriptions;\n\n    let updated = subscriptions.filter((item) => item.id !== id);\n    return {\n        ...state,\n        subscriptions: [...updated],\n    };\n};\n\nconst toggleForm = (state) => {\n    return {\n        ...state,\n        form: !state.form,\n    };\n};\n\nconst addCatFilter = ( state, { category } ) => {\n    if(state.categoryFilter.includes(category)) {\n        return {\n            ...state,\n        }\n    } else {\n        return {\n            ...state,\n            categoryFilter: [...state.categoryFilter, category],\n        }\n    }\n}\n\nconst clrCatFilter = ( state ) => {\n    return {\n        ...state,\n        categoryFilter: [],\n    }\n}\n\nconst toggleDropDown = ( state ) => {\n    return {\n        ...state,\n        dropDown: !state.dropDown,\n        filterContent: false,\n    }\n}\n\nconst toggleFilter = ( state ) => {\n    return {\n        ...state,\n        filterContent: !state.filterContent,\n\n    }\n}\n\nconst filterByCancel = ( state ) => {\n\n    let sorted = state.subscriptions.sort(( a, b ) => cancelDate( a.notice_period, paymentDayToDateObj(a.payment_date) ) - cancelDate( b.notice_period, paymentDayToDateObj(b.payment_date) ));\n\n    let sortedCopy = [ ...sorted ];\n\n    return {\n        ...state,\n        subscriptions: sortedCopy,\n    }\n}\n\nconst filterByPayment = ( state ) => {\n\n    let sorted = state.subscriptions.sort(( a, b ) => paymentDayToDateObj(a.payment_date) - paymentDayToDateObj(b.payment_date));\n\n    let sortedCopy = [ ...sorted ]\n\n    return {\n        ...state,\n        subscriptions: sortedCopy,\n    }\n}\n\n// Reducer\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"STORE_SUBSCRIPTIONS\":\n            return saveSubscriptions(state, action);\n        case \"SET_SELECTED\":\n            return setSelected(state, action);\n        case \"SET_FORM\":\n            return toggleForm(state);\n        case \"SAVE_SUBSCRIPTION\":\n            return saveSubscription(state, action);\n        case \"DELETE\":\n            return deleteFromState(state, action);\n        case \"ADD_CAT_FILTER\":\n            return addCatFilter(state, action);\n        case \"CLEAR_CAT_FILTER\":\n            return clrCatFilter(state);\n        case \"TOGGLE_DROP_DOWN\":\n            return toggleDropDown(state);\n        case \"TOGGLE_FILTER\":\n            return toggleFilter(state);\n        case \"FILTER_BY_PAYMENT\":\n            return filterByPayment(state);\n        case \"FILTER_BY_CANCEL\":\n            return filterByCancel(state);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport initialState from \"./initial\";\nimport reducer from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancers(applyMiddleware(thunk))  \n);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"./data/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}