{"version":3,"sources":["components/List/TrafficLight/TrafficLight.js","data/utilities/time.js","data/utilities/finances.js","components/Button/Button.js","axios-config.js","components/Button/index.js","data/actions/api.js","data/actions/state.js","components/Categories/Categories.js","components/Subscription/Subscription.js","components/Subscription/index.js","components/Form/FormField.js","components/Form/Form.js","components/Form/index.js","components/List/List.js","components/List/index.js","assets/icons/logo.svg","components/Header.js","components/DropDown/DropDown.js","App.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["TrafficLight","colourCode","className","1","2","3","paymentDayToDateObj","int","current","Date","getDate","setDate","setMonth","getMonth","daysToCancel","noticePeriod","paymentDate","miliseconds","daysFloat","Math","floor","convertToDays","noticeMili","now","cancelDateObj","cancelDate","amountPaid","start","cost","startDateObj","endDateObj","startDate","dateInt","dateString","toString","year","substring","month","day","dateStringToDateObj","getFullYear","Button","props","handleDelete","bind","event","preventDefault","window","confirm","this","deleteItem","itemID","onClick","Component","axios","create","baseURL","headers","Accept","connect","dispatch","id","delete","then","type","deleteSubscription","apiDelete","Categories","selected","categories","map","element","index","Subscription","listID","notice_period","payment_date","state","subscriptions","filter","item","length","FormField","label","name","handleChange","value","min","max","htmlFor","onChange","Form","notice","handleSubmit","handleChangeName","handleChangeCost","handleChangeStart","handleChangePayment","handleChangeNotice","handleChangeCategories","handleAddSubscription","setState","currentTarget","date","form","onSubmit","React","data","post","subscription_name","replace","split","storeSubscription","postSubscription","List","catListInFilterList","catList","filterList","reduce","bool","category","includes","handleClick","whatColour","formClick","handleLoad","setSelected","dataset","displayForm","paymentDay","rounded","toFixed","list","categoryFilter","filteredList","subscr","data-id","class","get","Header","src","logoIcon","alt","DropDown","categoryClick","innerText","App","initial","loaded","reducer","action","saveSubscriptions","console","log","toggleForm","saveSubscription","updated","deleteFromState","addCatFilter","clrCatFilter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","initialState","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d8d4e80.chunk.js","sourcesContent":["const TrafficLight = ({ colourCode }) => {\n    let classNames = {\n        1: \"traffic-light--green\",\n        2: \"traffic-light--yellow\",\n        3: \"traffic-light--red\",\n    };\n\n    return <div className={classNames[colourCode]}></div>;\n};\n\nexport default TrafficLight;\n","export const convertToDays = (miliseconds) => {\n    let daysFloat = miliseconds / (1000*60*60*24);\n    let daysInt = Math.floor(daysFloat);\n    return daysInt;\n}\n\nexport const dateStringToDateObj = (dateInt) => {\n    let dateString = dateInt.toString();\n    let year = +dateString.substring(0, 4);\n    let month = +dateString.substring(4, 6);\n    let day = +dateString.substring(6, 8);\n    let dateObj = new Date(year, month -1 , day)\n    return dateObj;\n}\n\nexport const paymentDayToDateObj= (int) => {\n    let current = new Date();\n    let today = current.getDate();\n\n    if ( int > today ) {\n        return current.setDate(int);\n    } else {\n        current.setDate(int)\n        current.setMonth(current.getMonth() + 1);\n        return current;\n    }\n}\n\nexport const cancelDate = ( noticePeriod, paymentDate ) => {\n    let noticeMili = noticePeriod*1000*60*60*24;\n    let now = new Date();\n\n    let cancelDateObj = new Date(paymentDate - noticeMili);\n\n    if ( cancelDateObj - now >= 0 ){\n        return cancelDateObj;\n    } else {\n        cancelDateObj.setMonth(cancelDateObj.getMonth() + 1);\n        return cancelDateObj;\n    }\n}\n\nexport const daysToCancel = (noticePeriod, paymentDate) => {\n\n    let paymentDay = paymentDayToDateObj(paymentDate);\n\n    let cancelOn = cancelDate(noticePeriod, paymentDay);\n\n    let current = new Date();\n\n    let days = convertToDays(cancelOn - current);\n    \n    return days;\n\n}\n\nexport const monthDiff = ( startDateObj, endDateObj ) => {\n    \n    let yearsAsMonths = (endDateObj.getFullYear() - startDateObj.getFullYear()) * 12;\n\n    let monthsInCurrentYear = endDateObj.getMonth() - startDateObj.getMonth();\n\n    let elapsed = yearsAsMonths + monthsInCurrentYear;\n\n\n    return elapsed;\n\n}","import { dateStringToDateObj, monthDiff } from \"./time\";\n\nexport const amountPaid = ( start, cost ) => {\n    \n    let startDate = dateStringToDateObj(start);\n\n    let current = new Date();\n\n    let elapsed = monthDiff(startDate, current);\n\n    return elapsed*cost;\n}","import { Component } from \"react\";\nclass Button extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete(event) {\n        event.preventDefault();\n        if(window.confirm(\"Do you want to delete this subscription?\")){\n            this.props.deleteItem(this.props.itemID);\n        };\n    }\n\n    render() {\n        return(\n            <button onClick={ this.handleDelete } className=\"delete\">Delete Subscription</button>\n        );\n    }\n}\n\nexport default Button;","// import the library version of axios\nimport axios from \"axios\";\n\n// create a version of axios with useful defaults\nexport default axios.create({\n    baseURL: \"https://subscriptions-tracker.developme.space/api/subscriptions\",\n    headers: {\n        // make sure we get JSON back\n        Accept: \"application/json\",\n    },\n});\n","import Button from \"./Button\";\n\nimport { connect } from \"react-redux\";\nimport { apiDelete } from \"../../data/actions/api\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteItem: ( id ) => dispatch(apiDelete( id )),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Button);","import axios from \"../../axios-config\";\n\nimport {\n    storeSubscriptions,\n    storeSubscription,\n    deleteSubscription,\n} from \"./state\";\n\nexport const getSubscriptions = () => {\n    return (dispatch) => {\n        axios.get(\"/\").then(({ data }) => {\n            let subscriptions = data.data;\n            dispatch(storeSubscriptions(subscriptions));\n        });\n    };\n};\n\nexport const postSubscription = (data) => {\n    return (dispatch) => {\n        axios\n            .post(\"/\", {\n                subscription_name: data.name,\n                cost: data.cost,\n                start: data.startDate.replace(/-/g, \"\"),\n                payment_date: data.paymentDate,\n                notice_period: data.notice,\n                categories: data.categories.split(\", \"),\n            })\n            .then(({ data }) => {\n                dispatch(storeSubscription(data.data));\n            });\n    };\n};\n\nexport const apiDelete = (id) => {\n    return (dispatch) => {\n        axios.delete(`/${id}`).then(() => {\n            dispatch(deleteSubscription(id));\n        });\n    };\n};\n","export const reset = () => ({\n    type: \"RESET\",\n});\n\nexport const storeSubscriptions = (data) => ({\n    type: \"STORE_SUBSCRIPTIONS\",\n    data: data,\n});\n\nexport const selected = (id) => ({\n    type: \"SET_SELECTED\",\n    selected: id,\n});\n\nexport const storeSubscription = (data) => ({\n    type: \"SAVE_SUBSCRIPTION\",\n    data: data,\n});\n\nexport const deleteSubscription = (id) => ({\n    type: \"DELETE\",\n    id: id,\n});\n\nexport const setForm = () => ({\n    type: \"SET_FORM\",\n});\nexport const categoryFilter = (category) => {\n    if (category === \"Clear\") {\n        return {\n            type: \"CLEAR_CAT_FILTER\",\n        };\n    } else {\n        return {\n            type: \"ADD_CAT_FILTER\",\n            category: category,\n        };\n    }\n};\n","const Categories = ({ selected }) => {\n    return (\n            <ul className=\"categories-list\"> \n                { selected.categories.map((element, index) => (            \n                    <li className=\"category\" key={ index }>{ element }</li> \n                )) } \n            </ul>\n        );\n};\n\nexport default Categories;","import { daysToCancel } from \"../../data/utilities/time\";\nimport { amountPaid } from \"../../data/utilities/finances\";\nimport Button from \"../Button\";\nimport Categories from \"../Categories/Categories\";\n\nconst Subscription = ({ selected, listID }) => {\n    let display = selected && selected.id === listID;\n    return (\n        !display ? null :\n        <div className=\"card-items\">\n            <p>Monthly Cost: £{selected.cost}</p>\n            <p>Next payment date: </p>\n            <p>Spent so far: £{amountPaid(selected.start, +selected.cost)}</p>\n            <p>Cancel in: { daysToCancel(selected.notice_period, selected.payment_date) } days</p>\n            <Categories selected={ selected }/>\n            <Button className=\"delete\" itemID={ listID }></Button>\n        </div>\n    );\n};\n\nexport default Subscription;\n","import Subscription from \"./Subscription\";\n\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    let current = state.subscriptions.filter( item => item.id === state.selected );\n\n    return {\n        selected: current.length === 0 ? null : current[0],\n    };\n};\n\nexport default connect(mapStateToProps)(Subscription);","const FormField = ({ label, name, type, handleChange, value, min, max }) => {\n    return (\n        <div>\n            <label htmlFor={name}>{label}</label>\n            <input\n                className=\"input\"\n                id={name}\n                type={type}\n                onChange={handleChange}\n                value={value}\n                min={min}\n                max={max}\n            />\n        </div>\n    );\n};\n\nexport default FormField;\n","import React from \"react\";\nimport FormField from \"./FormField\";\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\",\n            cost: 0,\n            startDate: null,\n            paymentDate: 0,\n            notice: 0,\n            categories: [],\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChangeCost = this.handleChangeCost.bind(this);\n        this.handleChangeStart = this.handleChangeStart.bind(this);\n        this.handleChangePayment = this.handleChangePayment.bind(this);\n        this.handleChangeNotice = this.handleChangeNotice.bind(this);\n        this.handleChangeCategories = this.handleChangeCategories.bind(this);\n    }\n\n    handleSubmit(event) {\n        let {\n            name,\n            cost,\n            startDate,\n            paymentDate,\n            notice,\n            categories,\n        } = this.state;\n\n        event.preventDefault();\n\n        this.props.handleAddSubscription({ ...this.state });\n\n        this.setState({\n            name: \"\",\n            cost: null,\n            startDate: \"\",\n            paymentDate: null,\n            notice: null,\n            categories: [],\n        });\n    }\n\n    handleChangeName(event) {\n        this.setState({ name: event.currentTarget.value });\n    }\n\n    handleChangeCost(event) {\n        this.setState({ cost: event.currentTarget.value });\n    }\n\n    handleChangeStart(event) {\n        this.setState({ startDate: event.currentTarget.value });\n    }\n\n    handleChangePayment(event) {\n        let date;\n\n        if (event.currentTarget.value > 31) {\n            date = 31;\n        } else if (event.currentTarget.value < 1) {\n            date = 1;\n        } else {\n            date = event.currentTarget.value;\n        }\n\n        this.setState({ paymentDate: date });\n    }\n\n    handleChangeNotice(event) {\n        this.setState({ notice: event.currentTarget.value });\n    }\n\n    handleChangeCategories(event) {\n        this.setState({ categories: event.currentTarget.value });\n    }\n\n    render() {\n        let {\n            name,\n            cost,\n            startDate,\n            paymentDate,\n            notice,\n            categories,\n        } = this.state;\n\n        let { form } = this.props;\n\n        return !form ? null : (\n            <form onSubmit={this.handleSubmit}>\n                <FormField\n                    label=\"Name\"\n                    name=\"Name\"\n                    type=\"text\"\n                    handleChange={this.handleChangeName}\n                    value={name}\n                />\n                <FormField\n                    label=\"Cost\"\n                    name=\"Cost\"\n                    type=\"number\"\n                    handleChange={this.handleChangeCost}\n                    value={cost}\n                />\n                <FormField\n                    label=\"Start Date\"\n                    name=\"Start Date\"\n                    type=\"date\"\n                    handleChange={this.handleChangeStart}\n                    value={startDate}\n                />\n                <FormField\n                    label=\"Payment Date\"\n                    name=\"Payment Date\"\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"31\"\n                    handleChange={this.handleChangePayment}\n                    value={paymentDate}\n                />\n                <FormField\n                    label=\"Notice Period\"\n                    name=\"Notice Period\"\n                    type=\"number\"\n                    handleChange={this.handleChangeNotice}\n                    value={notice}\n                />\n                <FormField\n                    label=\"Categories\"\n                    name=\"Categories\"\n                    type=\"text\"\n                    handleChange={this.handleChangeCategories}\n                    value={categories}\n                />\n                <button className=\"form-button\">Add Subscription</button>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import { connect } from \"react-redux\";\nimport Form from \"./Form\";\nimport { postSubscription } from \"../../data/actions/api\";\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        handleAddSubscription: (data) => dispatch(postSubscription(data)),\n    };\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        form: state.form,\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { Component } from \"react\";\nimport TrafficLight from \"./TrafficLight/TrafficLight\";\nimport Subscription from \"../Subscription\";\nimport { paymentDayToDateObj } from \"../../data/utilities/time\";\nimport Form from \"../Form\";\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.whatColour = this.whatColour.bind(this);\n        this.formClick = this.formClick.bind(this);\n        this.catListInFilterList = this.catListInFilterList.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.handleLoad();\n    }\n\n    handleClick(event) {\n        this.props.setSelected(event.currentTarget.dataset.id);\n    }\n\n    formClick() {\n        this.props.displayForm();\n    }\n\n    whatColour(paymentDay) {\n        let paymentDate = paymentDayToDateObj(paymentDay);\n\n        let current = new Date(); // the current date\n\n        let difference = paymentDate - current; // milliseconds difference\n\n        let days = difference / (1000 * 60 * 60 * 24); // turns milliseconds to days\n\n        let rounded = days.toFixed(1); // rounded day\n\n        if (rounded <= 5) {\n            return 3;\n        } else if (rounded <= 10) {\n            return 2;\n        } else return 1;\n    }\n\n    catListInFilterList = (catList, filterList) => {\n        let bool = catList.reduce((bool, category) => {\n            if (filterList.includes(category)) {\n                return true;\n            } else {\n                return bool;\n            }\n        }, false);\n        return bool;\n    };\n\n    render() {\n        const { list, categoryFilter } = this.props;\n        let filteredList = [];\n\n        if (categoryFilter.length === 0) {\n            filteredList = list;\n        } else {\n            filteredList = list.filter((subscr) =>\n                this.catListInFilterList(subscr.categories, categoryFilter)\n            );\n        }\n\n        return (\n            <ul className=\"sub-card\">\n                {filteredList.map((item) => (\n                    <li\n                        key={item.id}\n                        // onClick={this.handleClick}\n                        data-id={item.id}\n                        className=\"list-item\"\n                    >\n                        <div\n                            onClick={this.handleClick}\n                            data-id={item.id}\n                            className=\"list-item_header\"\n                        >\n                            <p>{item.subscription_name}</p>\n\n                            <TrafficLight\n                                colourCode={this.whatColour(item.payment_date)}\n                            />\n                        </div>\n                        <Subscription listID={item.id} />\n                    </li>\n                ))}\n                <li className=\"list-item\">\n                    Add Subscription\n                    <button class=\"add\" onClick={this.formClick}>\n                        +\n                    </button>\n                    <Form />\n                </li>\n            </ul>\n        );\n    }\n}\n\nexport default List;\n","import List from \"./List\";\n\nimport { connect } from \"react-redux\";\nimport { selected, setForm } from \"../../data/actions/state\";\nimport { getSubscriptions } from \"../../data/actions/api\";\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        list: state.subscriptions,\n        categoryFilter: state.categoryFilter,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelected: (id) => dispatch(selected(id)),\n        handleLoad: () => dispatch(getSubscriptions()),\n        displayForm: () => dispatch(setForm()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","export default __webpack_public_path__ + \"static/media/logo.5bbf18a7.svg\";","import logoIcon from '../assets/icons/logo.svg';\n\nconst Header = () => (\n    <header>\n        <div>\n        <img className=\"logo-svg\" src={ logoIcon } alt=\"My Subscriptions Logo\"/>\n        </div>\n        <ul>\n            <li>API Documents</li>\n        </ul>\n    </header>\n);\n\nexport default Header;\n","import { Component } from \"react\";\n\nclass DropDown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(event) {\n        event.preventDefault();\n        \n        this.props.categoryClick(event.currentTarget.innerText);\n    }\n\n    render() {\n        let { categories } = this.props;\n        return(\n            <div class=\"dropdown\">\n                <button class=\"dropbtn\">Catagories</button>\n                <div class=\"dropdown-content\">\n                    <button onClick={ this.handleClick }>Clear</button>\n                    { categories ? this.props.categories.map(category => (\n                        <button key={ category } onClick={ this.handleClick }>{ category }</button>\n                    )) : \"Loading....\"}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default DropDown;\n","import \"./styles/index.css\";\nimport List from \"./components/List\";\nimport Header from \"./components/Header\";\nimport DropDown from \"./components/DropDown/DropDown\";\n\nconst App = () => (\n    <>\n        <Header />\n        <List />\n        <DropDown />\n    </>\n);\n\nexport default App;\n","const initial = {\n    subscriptions: [],\n    loaded: false,\n    selected: null,\n    form: true,\n    categoryFilter: [],\n};\n\nexport default initial;\n","import { deleteSubscription } from \"./actions/state\";\nimport initialState from \"./initial\";\n\n// Reducer functions\nconst saveSubscriptions = (state, { data }) => {\n    return {\n        ...state,\n        subscriptions: data,\n    };\n};\n\nconst setSelected = (state, { selected }) => {\n    console.log(typeof selected);\n    console.log(selected === state.selected);\n    return {\n        ...state,\n        // selected: +selected,        \n        selected: +selected === state.selected ? 0 : +selected,\n    };\n};\n\nconst saveSubscription = (state, { data }) => {\n    return {\n        ...state,\n        subscriptions: [...state.subscriptions, data],\n    };\n};\n\nconst deleteFromState = (state, { id }) => {\n    let subscriptions = state.subscriptions;\n\n    let updated = subscriptions.filter((item) => item.id !== id);\n    return {\n        ...state,\n        subscriptions: [...updated],\n    };\n};\n\nconst toggleForm = (state) => {\n    return {\n        ...state,\n        form: !state.form,\n    };\n};\n\nconst addCatFilter = ( state, { category } ) => {\n    if(state.categoryFilter.includes(category)) {\n        return {\n            ...state,\n        }\n    } else {\n        return {\n            ...state,\n            categoryFilter: [...state.categoryFilter, category],\n        }\n    }\n}\n\nconst clrCatFilter = ( state ) => {\n    return {\n        ...state,\n        categoryFilter: [],\n    }\n}\n\n// Reducer\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"STORE_SUBSCRIPTIONS\":\n            return saveSubscriptions(state, action);\n        case \"SET_SELECTED\":\n            return setSelected(state, action);\n        case \"SET_FORM\":\n            return toggleForm(state);\n        case \"SAVE_SUBSCRIPTION\":\n            return saveSubscription(state, action);\n        case \"DELETE\":\n            return deleteFromState(state, action);\n        case \"ADD_CAT_FILTER\":\n            return addCatFilter(state, action);\n        case \"CLEAR_CAT_FILTER\":\n            return clrCatFilter(state);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport initialState from \"./initial\";\nimport reducer from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancers(applyMiddleware(thunk))  \n);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"./data/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}